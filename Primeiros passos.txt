1 - Git init = Inicia um repositório no local atual.

2 - Git status = Ver o status do local. Se existe arquivos para commitar.

3 - Git add = Adiciona um arquivo por vez, colocando o nome do file entre ""

    3.1 - Git add . = Adiciona todos os arquivos de uma vez

4 - Git commit -m "mensagem" = Commitar, "salvar", os arquivos para serem mandados pro servidor.

5 - Git remote add origin "http do repositorio" = Diz para onde mandar os arquivos.

6 - Git push = Manda os arquivos para o repositório.

    CICLO DE  ATUALIZAÇÃO DE CÓDIGO
Repita o mesmo processo de git add ., commit -m com sua mensagem e push para adicionar as modificações ao repositório

7 - Git relog = Mostra o histórico de atualizações

 7.1 Git --hard 'id da versão'' = Volta para a versão anterior que deseje.

 7.2 Git reset --hard id = Leva a versão mais atualizada

 
 - Branch = São como caminhos de versionamento de código.

Comandos: 

- Git branch = Lista as branch's dispóniveis 

- Git branch 'nome' = Cria uma branch como nome de sua escolha.

- Git checkout "nome da branch" = Muda de branch 

    Alterações para outra branch

  Após mudar de branch, seus códigos serão salvos na branch atual.
  Quando trabalhando com uma branch nova e quiser manda-la para o Github, use o comando dado peo git.

    Saindo da branch que acabou de fazer as alterações usando o git checkout e indo para a branch principal para mandar seu código atualizado. Não esqueça de commitar e mandar para o repositório

- Git merge 'nome da branch' = O comando para unir códigos.
